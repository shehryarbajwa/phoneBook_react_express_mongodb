{"version":3,"sources":["Components/Phone.js","Services/phone.js","Components/Error.js","Components/PhoneBook.js","index.js"],"names":["Phone","name","number","handleDelete","className","onClick","icon","faTrash","baseUrl","axios","get","then","response","data","phoneObject","post","id","delete","Notification","message","Phonebook","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","errorMessage","setErrorMessage","error","toggleError","useEffect","phoneService","person","value","onChange","event","target","preventDefault","newPhone","length","map","alert","concat","returnedPerson","catch","faUserPlus","key","window","confirm","contact","find","contactToDelete","filter","setTimeout","ReactDOM","render","PhoneBook","document","getElementById"],"mappings":"iPAWeA,EAND,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,aAC3B,OACI,wBAAIC,UAAU,SAASH,EAAvB,QAAkCC,EAAlC,IAA0C,4BAAQG,QAASF,GAHrD,SAGoC,IAAuC,kBAAC,IAAD,CAAiBG,KAAMC,S,gBCN1GC,EAAU,eAsBD,EApBA,WAEX,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAkB9B,EAfA,SAACC,GAEZ,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAa9B,EAVI,SAACG,EAAIF,GAEpB,OADgBL,IAAMQ,OAAN,UAAgBT,EAAhB,YAA2BQ,GAAMF,GAClCH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCD9BK,EAZM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OAAgB,OAAZA,EACO,KAIP,yBAAKf,UAAU,SACVe,ICiHEC,EAnHG,WAAO,IAAD,EACQC,mBAAS,IADjB,mBACfC,EADe,KACNC,EADM,OAEQF,mBAAS,gBAFjB,mBAEfG,EAFe,KAENC,EAFM,OAGYJ,mBAAS,gBAHrB,mBAGfK,EAHe,KAGJC,EAHI,OAIkBN,mBAAS,0BAJ3B,mBAIfO,EAJe,KAIDC,EAJC,OAKOR,oBAAS,GALhB,mBAKfS,EALe,KAKRC,EALQ,KAOtBC,qBAAU,WACRC,IAAsBtB,MAAK,SAAAuB,GACzBX,EAAWW,MAEbH,GAAY,KACX,IA8EH,OACE,6BACE,yCACCD,EAAQ,kBAAC,EAAD,CAAcX,QAASS,IAAmB,KACnD,8BACE,yBAAKxB,UAAU,aACb,uCACA,6BACA,2BAAO+B,MAAOX,EAASY,SAhBX,SAAAC,GAClBZ,EAAWY,EAAMC,OAAOH,WAiBpB,yBAAK/B,UAAU,eACb,yCACA,6BACA,2BAAO+B,MAAOT,EAAWU,SAjBP,SAAAC,GACxBV,EAAaU,EAAMC,OAAOH,WAkBtB,yBAAK/B,UAAU,eACb,4BAAQC,QA5FK,SAAAgC,GACnBA,EAAME,iBACN,IAAMC,EAAW,CACfvC,KAAMuB,EACNR,GAAIM,EAAQmB,OAAS,EACrBvC,OAAQwB,GAQWJ,EAAQoB,KAAI,SAAAR,GAAM,OACrCA,EAAOjC,OAASuC,EAASvC,MALzB8B,GAAY,QACZY,MAAM,GAAD,OAAInB,EAAJ,oCAMDD,EAAWD,EAAQsB,OAAOJ,OAGhCP,EAAoBO,GAAU7B,MAAK,SAAAkC,GACjCtB,EAAWD,EAAQsB,OAAOC,OAE3BC,OAAM,SAAAhB,GACLD,EAAgBC,EAAMlB,SAASC,SAGjCY,EAAW,IACXE,EAAa,MAiEwB,kBAAC,IAAD,CAAiBrB,KAAMyC,SAG1D,sCACA,6BAvCFzB,EAAQoB,KAAI,SAAAR,GACV,OACE,kBAAC,EAAD,CACEc,IAAKd,EAAOlB,GACZf,KAAMiC,EAAOjC,KACbC,OAAQgC,EAAOhC,OACfC,aAAc,kBAjCD,SAAAa,GACnB,GAAIiC,OAAOC,QAAQ,gDAAiD,CACzD,wCAAoClC,GAA7C,IACMmC,EAAU7B,EAAQ8B,MAAK,SAAAlB,GAAM,OAAIA,EAAOlB,KAAOA,KAC/CqC,EAAe,eAAQF,GAE7BlB,EACcjB,EAAIqC,GACf1C,MAAK,SAAAkC,GACJtB,EACED,EAAQgC,QAAO,SAAApB,GAAM,OAAIA,EAAOlB,KAAOqC,EAAgBrC,OAEzDa,EAAgB,QAAD,OACLwB,EAAgBpD,KADX,4CAGfsD,YAAW,WACT1B,EAAgB,QACf,QAEJiB,OAAM,SAAAhB,GACLa,MAAM,qBAAD,OAAsB3B,EAAtB,6BAaeb,CAAa+B,EAAOlB,aC/ElDwC,IAASC,OAAO,kBAACC,EAAD,MAAeC,SAASC,eAAe,W","file":"static/js/main.3d967de6.chunk.js","sourcesContent":["import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\n\nconst label = 'Remove'\nconst Phone = ({ name, number, handleDelete }) => {\n    return (\n        <li className=\"phone\">{name} no: {number} <button onClick={handleDelete}>{label} <FontAwesomeIcon icon={faTrash} /></button></li>\n    )\n}\n\nexport default Phone;","import axios from 'axios';\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = (phoneObject) => {\n    const request = axios.post(baseUrl, phoneObject)\n    return request.then(response => response.data)\n}\n\nconst noteDelete = (id, phoneObject) => {\n    const request = axios.delete(`${baseUrl}/${id}`, phoneObject)\n    return request.then(response => response.data)\n}\n\nconst update = (id, phoneObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, phoneObject)\n    return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, noteDelete }","import React from 'react';\n\nconst Notification = ({ message }) => {\n    if (message === null) {\n        return null;\n    }\n\n    return (\n        <div className=\"error\">\n            {message}\n        </div>\n    )\n}\n\nexport default Notification;","import React, { useState, useEffect } from \"react\";\nimport Phone from \"./Phone\";\nimport phoneService from \"../Services/phone.js\";\nimport Notification from \"./Error\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faUserPlus } from '@fortawesome/free-solid-svg-icons'\n\nconst Phonebook = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"enter a name\");\n  const [newNumber, setNewNumber] = useState(\"XXX-XXX-XXXX\");\n  const [errorMessage, setErrorMessage] = useState(\"some error happened...\");\n  const [error, toggleError] = useState(false)\n\n  useEffect(() => {\n    phoneService.getAll().then(person => {\n      setPersons(person);\n    });\n    toggleError(false);\n  }, []);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const newPhone = {\n      name: newName,\n      id: persons.length + 1,\n      number: newNumber\n    };\n\n    const handleAlert = () => {\n      toggleError(true)\n      alert(`${newName} is already added to phonebook`);\n    };\n\n    const personExists = persons.map(person =>\n      person.name === newPhone.name\n        ? handleAlert()\n        : setPersons(persons.concat(newPhone))\n    );\n\n    phoneService.create(newPhone).then(returnedPerson => {\n      setPersons(persons.concat(returnedPerson));\n    })\n    .catch(error => {\n      setErrorMessage(error.response.data)\n    });\n\n    setNewName(\"\");\n    setNewNumber(\"\");\n  };\n\n  const handleDelete = id => {\n    if (window.confirm(\"Are you sure you want to delete this person?\")) {\n      const url = `http://localhost:3001/persons/${id}`;\n      const contact = persons.find(person => person.id === id);\n      const contactToDelete = { ...contact };\n\n      phoneService\n        .noteDelete(id, contactToDelete)\n        .then(returnedPerson => {\n          setPersons(\n            persons.filter(person => person.id !== contactToDelete.id)\n          );\n          setErrorMessage(\n            `Note ${contactToDelete.name} was already removed from the phoneBook`\n          );\n          setTimeout(() => {\n            setErrorMessage(null);\n          }, 5000);\n        })\n        .catch(error => {\n          alert(`This contact with ${id} was already deleted`);\n        });\n    }\n  };\n\n\n  const person_rows = () =>\n    persons.map(person => {\n      return (\n        <Phone\n          key={person.id}\n          name={person.name}\n          number={person.number}\n          handleDelete={() => handleDelete(person.id)}\n        />\n      );\n    });\n\n  const handleInput = event => {\n    setNewName(event.target.value);\n  };\n\n  const handleNumberInput = event => {\n    setNewNumber(event.target.value);\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      {error ? <Notification message={errorMessage} /> : null}\n      <form>\n        <div className=\"form-name\">\n          <label>Name</label>\n          <br />\n          <input value={newName} onChange={handleInput} />\n        </div>\n        <div className=\"form-number\">\n          <label>Number</label>\n          <br />\n          <input value={newNumber} onChange={handleNumberInput} />\n        </div>\n        <div className=\"form-submit\">\n          <button onClick={handleSubmit}><FontAwesomeIcon icon={faUserPlus} /></button>\n        </div>\n      </form>\n      <h2>People</h2>\n      <div>{person_rows()}</div>\n    </div>\n  );\n};\n\nexport default Phonebook;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport PhoneBook from './Components/PhoneBook'\n\nReactDOM.render(<PhoneBook />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}